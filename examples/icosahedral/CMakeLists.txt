list( APPEND SRCFILES
      copy_stencil_icosahedral expandable_parameters_icosahedral stencil_on_cells stencil_on_cells_color stencil_on_edges stencil_on_edges_of_cells stencil_fused stencil_on_neighcell_of_edges stencil_on_neighedge_of_cells stencil_manual_fold stencil_on_vertices stencil_on_edges_multiplefields curl div lap)

file(GLOB_RECURSE INC_ALL_ "[a-z]*.hpp")
list ( APPEND INC_ALL ${INC_ALL_} )
file(GLOB_RECURSE INC_ALL_ "../../include/[a-z|A-Z|0-9]*.hpp")
list ( APPEND INC_ALL ${INC_ALL_} )
set( GTEST_FILES ../Options.hpp ../Options.cpp unstructured_grid.cpp)

add_definitions("-DBENCHMARK")
set(exe_LIBS gtest gtest_main "${exe_LIBS}" )

if(ENABLE_HOST)
    foreach(srcfile IN LISTS SRCFILES )
        add_executable(${srcfile}_host_naive   ${srcfile}.cpp ${INC_ALL} ${GTEST_FILES})
        add_executable(${srcfile}_host_block   ${srcfile}.cpp ${INC_ALL} ${GTEST_FILES})
        set_target_properties(${srcfile}_host_naive PROPERTIES COMPILE_FLAGS ${CMAKE_CXX_FLAGS})
        set_target_properties(${srcfile}_host_block PROPERTIES COMPILE_FLAGS ${CMAKE_CXX_FLAGS})
        target_link_libraries(${srcfile}_host_naive ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_link_libraries(${srcfile}_host_block ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_compile_definitions(${srcfile}_host_naive PUBLIC ${HOST_BACKEND_DEFINE} "BACKEND_STRATEGY_NAIVE")
        target_compile_definitions(${srcfile}_host_block PUBLIC ${HOST_BACKEND_DEFINE})

        gridtools_add_test( tests.${srcfile}_host_block ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_host_block" "12 33 61")
        gridtools_add_test( tests.${srcfile}_host_block ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_host_block" "23 11 43")
        gridtools_add_test( tests.${srcfile}_host_naive ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_host_naive" "12 33 21")
        gridtools_add_test( tests.${srcfile}_host_naive ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_host_naive" "23 11 23")
    endforeach(srcfile)
endif(ENABLE_HOST)

if(ENABLE_MIC)
    foreach(srcfile IN LISTS SRCFILES )
        add_executable(${srcfile}_mic_naive   ${srcfile}.cpp ${INC_ALL} ${GTEST_FILES})
        add_executable(${srcfile}_mic_block   ${srcfile}.cpp ${INC_ALL} ${GTEST_FILES})
        set_target_properties(${srcfile}_mic_naive PROPERTIES COMPILE_FLAGS ${CMAKE_CXX_FLAGS})
        set_target_properties(${srcfile}_mic_block PROPERTIES COMPILE_FLAGS ${CMAKE_CXX_FLAGS})
        target_link_libraries(${srcfile}_mic_naive ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_link_libraries(${srcfile}_mic_block ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_compile_definitions(${srcfile}_mic_naive PUBLIC ${MIC_BACKEND_DEFINE} "BACKEND_STRATEGY_NAIVE")
        target_compile_definitions(${srcfile}_mic_block PUBLIC ${MIC_BACKEND_DEFINE})

        gridtools_add_test( tests.${srcfile}_mic_block ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_mic_block" "12 33 61")
        gridtools_add_test( tests.${srcfile}_mic_block ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_mic_block" "23 11 43")
        gridtools_add_test( tests.${srcfile}_mic_naive ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_mic_naive" "12 33 21")
        gridtools_add_test( tests.${srcfile}_mic_naive ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_mic_naive" "23 11 23")
    endforeach(srcfile)
endif(ENABLE_MIC)

if(ENABLE_CUDA)
    foreach(srcfile IN LISTS SRCFILES MPISRCFILES )
         set(CUDA_SEPARABLE_COMPILATION OFF)
         cuda_add_executable( ${srcfile}_cuda ${srcfile}.cu ${GTEST_FILES} OPTIONS ${GPU_SPECIFIC_FLAGS} "-D${CUDA_BACKEND_DEFINE}")
         target_link_libraries(${srcfile}_cuda ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS} )

         if( ${srcfile} STREQUAL "stencil_on_vertexes")
             # K lenght larger than 48 fails for stencil_on_vertexes_cuda... this need to be investigated
             gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "77 48 48")
             gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "63 55 43")
         else()
                  if( ${srcfile} STREQUAL "expandable_parameters_icosahedral" OR ${srcfile} STREQUAL "copy_stencil_icosahedral")
                               gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "32 48 61")
                               gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "64 55 43")
                  else()
                               gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "77 48 61")
                               gridtools_add_test( tests.${srcfile}_cuda ${TEST_SCRIPT} "${CMAKE_BINARY_DIR}/examples/icosahedral/${srcfile}_cuda" "63 55 43")
                  endif()
         endif()
    endforeach(srcfile)
endif(ENABLE_CUDA)

if(ENABLE_HOST)
    ### Validation is not passing for the following but we compile it for maintaining the API and code
    list( APPEND SRCCOMPONLYFILES  # TODO RECOVER stencil_nested_on
    )

    foreach(srcfile IN LISTS SRCCOMPONLYFILES )
        add_executable(${srcfile}_host_naive   ${srcfile}.cpp ${GTEST_FILES})
        add_executable(${srcfile}_host_block   ${srcfile}.cpp ${GTEST_FILES})
        set_target_properties(${srcfile}_host_naive PROPERTIES COMPILE_FLAGS ${ADDITIONAL_CXX_FLAGS})
        set_target_properties(${srcfile}_host_block PROPERTIES COMPILE_FLAGS ${ADDITIONAL_CXX_FLAGS})
        target_link_libraries(${srcfile}_host_naive ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_link_libraries(${srcfile}_host_block ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_compile_definitions(${srcfile}_host_naive PUBLIC ${HOST_BACKEND_DEFINE} "BACKEND_STRATEGY_NAIVE")
        target_compile_definitions(${srcfile}_host_block PUBLIC ${HOST_BACKEND_DEFINE})

    endforeach(srcfile)
endif(ENABLE_HOST)

if(ENABLE_MIC)
    ### Validation is not passing for the following but we compile it for maintaining the API and code
    list( APPEND SRCCOMPONLYFILES  # TODO RECOVER stencil_nested_on
    )

    foreach(srcfile IN LISTS SRCCOMPONLYFILES )
        add_executable(${srcfile}_mic_naive   ${srcfile}.cpp ${GTEST_FILES})
        add_executable(${srcfile}_mic_block   ${srcfile}.cpp ${GTEST_FILES})
        set_target_properties(${srcfile}_mic_naive PROPERTIES COMPILE_FLAGS ${ADDITIONAL_CXX_FLAGS})
        set_target_properties(${srcfile}_mic_block PROPERTIES COMPILE_FLAGS ${ADDITIONAL_CXX_FLAGS})
        target_link_libraries(${srcfile}_mic_naive ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_link_libraries(${srcfile}_mic_block ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS})
        target_compile_definitions(${srcfile}_mic_naive PUBLIC ${MIC_BACKEND_DEFINE} "BACKEND_STRATEGY_NAIVE")
        target_compile_definitions(${srcfile}_mic_block PUBLIC ${MIC_BACKEND_DEFINE})

    endforeach(srcfile)
endif(ENABLE_MIC)

#if(CUDA_FOUND)
#    foreach(srcfile IN LISTS SRCCOMPONLYFILES MPISRCFILES )
#         cuda_add_executable( ${srcfile}_cuda ${srcfile}.cu ${GTEST_FILES})
#         set_target_properties(${srcfile}_cuda PROPERTIES COMPILE_FLAGS ${ADDITIONAL_CXX_FLAGS})
#         target_link_libraries(${srcfile}_cuda ${exe_LIBS} gcl ${ADD_MPI_LIBS} ${MPI_ADDITIONAL_LIBS} )
#    endforeach(srcfile)
#endif()
