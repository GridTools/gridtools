@PACKAGE_INIT@

get_filename_component(GRIDTOOLS_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

include(CMakeFindDependencyMacro)
find_dependency(Boost @REQUIRED_BOOST_VERSION@)

if (@GT_USE_MPI@)
    find_dependency(MPI COMPONENTS CXX)
endif()

if (@OPENMP_AVAILABLE@)
    find_dependency(OpenMP COMPONENTS CXX)
endif()

include("${GRIDTOOLS_CMAKE_DIR}/GridToolsTargets.cmake")

if (TARGET GridTools)
    set(GridToolsTarget GridTools)
else()
    set(GridToolsTarget gridtools::GridTools)
endif()

# CUDA workaround
if(${CMAKE_CUDA_COMPILER_LOADED})
    if (${CMAKE_CUDA_COMPILER_VERSION} VERSION_GREATER_EQUAL "9.2" AND ${CMAKE_CUDA_COMPILER_VERSION} VERSION_LESS "10.1")
        target_compile_definitions(${GridToolsTarget} INTERFACE BOOST_OPTIONAL_CONFIG_USE_OLD_IMPLEMENTATION_OF_OPTIONAL)
        target_compile_definitions(${GridToolsTarget} INTERFACE BOOST_OPTIONAL_USE_OLD_DEFINITION_OF_NONE)
    endif()
endif()

target_compile_definitions(${GridToolsTarget} INTERFACE STRUCTURED_GRIDS)

if (GRIDTOOLS_ENABLE_PERFORMANCE_METERS)
    target_compile_definitions(${GridToolsTarget} GridTools INTERFACE ENABLE_METERS)
endif()

check_required_components(gridtools)
