name: CMake

on:
  push:
    branches: [ cmake_refactoring, gh-action-cmake-checks ] #TODO point to master
  pull_request:
    branches: [ cmake_refactoring ]

jobs:
  clang:
    runs-on: ubuntu-latest
    container: mrtravis/gridtools:clang-${{ matrix.version }}
    strategy:
        matrix:
            version: [7, 8, 9]
            cuda-mode: [AUTO, Clang-CUDA, NVCC-CUDA]

    steps:
    - uses: actions/checkout@v2
    - name: CMake configure expect success
      if: contains(matrix.cuda-mode, 'AUTO')
      run: >
        mkdir build && cd build
        && cmake .. -DGT_CLANG_CUDA_MODE=${{ matrix.cuda-mode }} > out.log
        && grep "GridTools GPU mode: NOTFOUND" out.log > /dev/null
    - name: CMake configure expect failure
      if: (!contains(matrix.cuda-mode, 'AUTO'))
      run: |
        mkdir build && cd build
        if cmake .. -DGT_CLANG_CUDA_MODE=${{ matrix.cuda-mode }}; then
            false
        else
            true
        fi

  clang-cuda:
    runs-on: ubuntu-latest
    container: mrtravis/gridtools:clang-${{ matrix.version }}-cuda-10.1
    strategy:
        matrix:
            version: [9]
            cuda-mode: [AUTO, Clang-CUDA, NVCC-CUDA]

    steps:
    - uses: actions/checkout@v2
    - name: CMake configure expect success
      if: contains(matrix.cuda-mode, 'AUTO')
      run: >
        mkdir build && cd build
        && cmake .. -DGT_CLANG_CUDA_MODE=${{ matrix.cuda-mode }} > out.log
        && export expected_mode=${{ matrix.cuda-mode }}
        && if [ "$expected_mode" == "AUTO" ]; then export expected_mode="Clang-CUDA" fi
        && echo $expected_mode
        && grep "GridTools GPU mode: $expected_mode" out.log > /dev/null
